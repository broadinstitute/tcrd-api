/**
 * Target Central Resource Database API
 * REST API for data from Target Central Resource Database
 *
 * OpenAPI spec version: 20190612
 * Contact: oliverr@broadinstitute.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 */

package tcrd.server.api

import tcrd.model.FilterOptions
import tcrd.model.GenesFilterQuery
import tcrd.model.Status
import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }
import tcrd.db.api.DbApi

import scala.collection.JavaConverters._

class DefaultApi(dbApi: DbApi)(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "DefaultApi"

  println("Constructing DefaultApi")

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }

  val filterGenesOperation = (apiOperation[List[String]]("filterGenes")
    summary "Filter list of genes by one or more conditions"
    parameters (bodyParam[GenesFilterQuery]("body").description("")))

  post("/filterGenes", operation(filterGenesOperation)) {

    val body = parsedBody.extract[GenesFilterQuery]

    println("body: " + body)
    dbApi.filterGenes(body)
  }

  val getPossibleFiltersOperation = (apiOperation[List[FilterOptions]]("getPossibleFilters")
    summary "Get list of fields and available filters"
    parameters ())

  get("/possibleFilters", operation(getPossibleFiltersOperation)) {
    dbApi.possibleFilters
  }

  val getStatusOperation = (apiOperation[Status]("getStatus")
    summary "Status of the API"
    parameters ())

  get("/status", operation(getStatusOperation)) {
    dbApi.status
  }

}
